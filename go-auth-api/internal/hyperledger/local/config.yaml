name: "default-svc-cluster-local-network"

version: 2.2.1

certificateAuthorities:
  ibm-ca:
    tlsCACerts:
      path: /home/nick/Projects/k8s-hyperledger-fabric-2.2/crypto-config/peerOrganizations/ibm/msp/cacerts/ca.ibm-cert.pem
    url: https://localhost:7055
    registrar:
      enrollId: admin
      enrollSecret: adminpw
    httpOptions:
      verify: false

channels:
  mainchannel:

    peers:
      peer0-ibm:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

    policies:
      queryChannelConfig:
        minResponses: 1
        maxTargets: 1
        retryOpts:
          attempts: 5
          initialBackoff: 1000ms
          maxBackoff: 10s
          backoffFactor: 2.0

client:
  organization: ibm

  logging:
    level: info
  
  cryptoconfig:
    path: /home/nick/Projects/k8s-hyperledger-fabric-2.2/crypto-config

  # Some SDKs support pluggable KV stores, the properties under "credentialStore"
  # are implementation specific
  credentialStore:
    # [Optional]. Used by user store. Not needed if all credentials are embedded in configuration
    # and enrollments are performed elsewhere.
    path: "/home/nick/Projects/k8s-hyperledger-fabric-2.2/client/state-store"

    # [Optional]. Specific to the CryptoSuite implementation used by GO SDK. Software-based implementations
    # requiring a key store. PKCS#11 based implementations does not.
    cryptoStore:
      # Specific to the underlying KeyValueStore that backs the crypto key store.
      path: /home/nick/Projects/k8s-hyperledger-fabric-2.2/client/msp

  BCCSP:
    security:
      enabled: true
      default:
        provider: "SW"
      hashAlgorithm: "SHA2"
      softVerify: true
      level: 256
  
  tlsCerts:
    systemCertPool: true

orderers:
  _default:
    grpcOptions:
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      allow-insecure: false
  
  orderer0:
    url: http://localhost:7050
    grpcOptions:
      ssl-target-name-override: orderer0
      grpc-max-send-message-length: 15
    tlsCACerts:
      path: /home/nick/Projects/k8s-hyperledger-fabric-2.2/crypto-config/ordererOrganizations/orderer/msp/tlscacerts/orderers-ca-7054.pem

  orderer1:
    url: http://localhost:8050
    grpcOptions:
      ssl-target-name-override: orderer1
      grpc-max-send-message-length: 15
    tlsCACerts:
      path: /home/nick/Projects/k8s-hyperledger-fabric-2.2/crypto-config/ordererOrganizations/orderer/msp/tlscacerts/orderers-ca-7054.pem

  orderer2:
    url: http://localhost:9050
    grpcOptions:
      ssl-target-name-override: orderer2
      grpc-max-send-message-length: 15
    tlsCACerts:
      path: /home/nick/Projects/k8s-hyperledger-fabric-2.2/crypto-config/ordererOrganizations/orderer/msp/tlscacerts/orderers-ca-7054.pem

organizations:
  ibm:
    certificateAuthorities:
      - ibm-ca
    cryptopath: peerOrganizations/ibm/users/Admin@ibm/msp
    mspid: ibm
    peers:
      - peer0-ibm
      - peer1-ibm

peers:
  peer0-ibm:
    url: http://localhost:7051
    tlsCACerts:
      path: /home/nick/Projects/k8s-hyperledger-fabric-2.2/crypto-config/peerOrganizations/ibm/peers/peer0-ibm/msp/tlscacerts/tlsca.ibm-cert.pem
    grpcOptions:
      ssl-target-name-override: peer0-ibm:7051
      hostnameOverride: peer0-ibm:7051
  peer1-ibm:
    url: http://localhost:8051
    tlsCACerts:
      path: /home/nick/Projects/k8s-hyperledger-fabric-2.2/crypto-config/peerOrganizations/ibm/peers/peer1-ibm/msp/tlscacerts/tlsca.ibm-cert.pem
    grpcOptions:
      ssl-target-name-override: peer1-ibm:7051
      hostnameOverride: peer1-ibm:7051

